// Generated by CoffeeScript 1.11.1
(function() {
  var CND, TC, alert, badge, debug, help, log, rpr, step, warn,
    slice = [].slice;

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'TOPOCACHE/ALIGNERS';

  log = CND.get_logger('plain', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  alert = CND.get_logger('alert', badge);

  step = require('coffeenode-suspend').step;

  TC = require('./main');

  this.shell = function(me, command, handler) {
    var arity;
    if ((arity = command.length !== 1)) {
      throw new Error("expected single argument, got " + arity + " (" + (rpr(kind)) + ", " + (rpr(command)) + ")");
    }
    command = command[0];
    return TC.HELPERS.shell(me, command, function(error, output) {
      if (error != null) {
        return handler(error);
      }
      return handler(null, output);
    });
  };

  this.call = function(me, method_and_parameters, handler) {
    var method, parameters, type;
    method = method_and_parameters[0], parameters = 2 <= method_and_parameters.length ? slice.call(method_and_parameters, 1) : [];
    if ((type = CND.type_of(method)) !== 'function') {
      return handler(new Error("expected a function, got a " + type));
    }

    /* TAINT allow synchronous functions? */
    return method.apply(null, slice.call(parameters).concat([function(error, output) {
      if (error != null) {
        return handler(error);
      }
      return handler(null, output);
    }]));
  };

}).call(this);

//# sourceMappingURL=aligners.js.map
