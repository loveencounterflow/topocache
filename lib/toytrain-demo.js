// Generated by CoffeeScript 1.11.1
(function() {
  var $, $async, CND, D, FS, LTSORT, PATH, TC, badge, debug, echo, help, info, log, rpr, step, test, urge, warn, whisper;

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'TOPOCACHE/TOYTRAIN-DEMO';

  log = CND.get_logger('plain', badge);

  debug = CND.get_logger('debug', badge);

  info = CND.get_logger('info', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  whisper = CND.get_logger('whisper', badge);

  echo = CND.echo.bind(CND);

  test = require('guy-test');

  TC = require('./main');

  LTSORT = require('ltsort');

  PATH = require('path');

  FS = require('fs');

  step = require('coffeenode-suspend').step;

  D = require('pipedreams');

  $ = D.$, $async = D.$async;

  require('pipedreams/lib/plugin-tsv');

  this["toytrain demo"] = function(T, done) {
    var read_sims;
    this._procure_test_files();
    read_sims = function() {
      var input, path;
      path = PATH.resolve(__dirname, '../test-data', 'sims.tsv');
      whisper(path);
      input = D.new_stream({
        path: path
      });
      return input.pipe(D.$split_tsv()).pipe($(function(record, send) {
        var _, source, target;
        _ = record[0], target = record[1], _ = record[2], source = record[3];
        return send([target, source]);
      })).pipe($(function(record, send) {
        var source, target;
        target = record[0], source = record[1];
        source = source.replace(/!.*$/g, '');
        return send([target, source]);
      })).pipe(D.$show()).pipe($('finish', function() {
        return done();
      }));
    };
    read_sims();
    return null;
  };

}).call(this);

//# sourceMappingURL=toytrain-demo.js.map
